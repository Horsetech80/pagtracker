# ============================================
# DOCKER COMPOSE - PAGTRACKER V4.0 PRODUÇÃO
# Stack completa: App + Redis + Nginx + SSL
# ============================================

services:
  # ============================================
  # APLICAÇÃO PRINCIPAL
  # ============================================
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: pagtracker-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
    env_file:
      - docker.env
    volumes:
      - ./logs/app:/app/logs
    networks:
      - pagtracker-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============================================
  # REDIS CACHE & SESSIONS
  # ============================================
  redis:
    image: redis:7-alpine
    container_name: pagtracker-redis
    restart: unless-stopped
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./redis.conf:/etc/redis/redis.conf:ro
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    networks:
      - pagtracker-network
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    sysctls:
      - net.core.somaxconn=1024
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # ============================================
  # NGINX REVERSE PROXY
  # ============================================
  nginx:
    image: nginx:alpine
    container_name: pagtracker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Configurações
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      
      # SSL Certificates
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      
      # Logs
      - ./logs/nginx:/var/log/nginx
      
      # Cache
      - nginx_cache:/var/cache/nginx
    networks:
      - pagtracker-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.pagtracker.service=nginx"
      - "com.pagtracker.version=4.0"

  # ============================================
  # CERTBOT PARA SSL
  # ============================================
  certbot:
    image: certbot/certbot
    container_name: pagtracker-certbot
    restart: "no"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./logs/certbot:/var/log/letsencrypt
    networks:
      - pagtracker-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # ============================================
  # REDIS COMMANDER (OPCIONAL - DEV)
  # ============================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: pagtracker-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=pagtracker2025
    ports:
      - "127.0.0.1:8081:8081"
    networks:
      - pagtracker-network
    depends_on:
      - redis
    profiles:
      - dev
      - monitoring

  # ============================================
  # WATCHTOWER (AUTO-UPDATES)
  # ============================================
  watchtower:
    image: containrrr/watchtower
    container_name: pagtracker-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_LABEL_ENABLE=true
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    profiles:
      - production

# ============================================
# NETWORKS
# ============================================
networks:
  pagtracker-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ============================================
# VOLUMES
# ============================================
volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  
  nginx_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/nginx-cache
